version: 2
jobs:
  build:
    working_directory: ~/beagle-repository

    docker:
      - image: circleci/openjdk:8-jdk-browsers

    environment:
      - MAVEN_OPTS: -Xmx2048m -XX:ReservedCodeCacheSize=512m

    steps:

      - checkout

      - restore_cache:
          keys:
            - beagle-repository-v2-{{ checksum "pom.xml" }}
            - beagle-repository-v2

      - run:
          name: Remove Beagle artifacts from Maven Repository
          command: rm -rf ~/.m2/repository/de/keybird

      - run: mvn validate
      - run: mvn test-compile
      - run: mvn verify
      - run: mvn package -DskipTests

      - save_cache:
          paths:
            - ~/.m2
          key: beagle-repository-v2-{{ checksum "pom.xml" }}

      - store_test_results:
          path: target/surefire-reports
      - store_artifacts:
          path: target/surefire-reports

      - store_artifacts:
          path: target/beagle-0.0.1-SNAPSHOT.jar

      - setup_remote_docker

      # build the application image
      # TODO MVR find version automatically from pom.xml
      - run: |
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
            export DOCKERHUB_TAG=${CIRCLE_BRANCH//\//-}-${CIRCLE_SHA1}
            case "${CIRCLE_BRANCH}" in
                master)
                  echo "Building docker image with tag ${DOCKERHUB_TAG} and latest."
                  docker build --build-arg JAR_FILE=target/beagle-0.2-SNAPSHOT.jar -t keybird/beagle:${DOCKERHUB_TAG} .
                  docker tag keybird/beagle:${DOCKERHUB_TAG} keybird/beagle:latest
                  docker push keybird/beagle:${DOCKERHUB_TAG}
                  docker push keybird/beagle:latest
                  ;;
                *)
                  echo "Building docker image with tag ${DOCKERHUB_TAG}."
                  docker build --build-arg JAR_FILE=target/beagle-0.2-SNAPSHOT.jar -t keybird/beagle:${DOCKERHUB_TAG} .
                  docker push keybird/beagle:${DOCKERHUB_TAG}
                  ;;
              esac

  e2e:
    working_directory: ~/beagle-repository
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout

      - restore_cache:
          keys:
            - beagle-repository-v2-{{ checksum "pom.xml" }}
            - beagle-repository-v2

      # enable docker in docker
      - setup_remote_docker

      # Startup application
      - run: |
          export DOCKERHUB_TAG=${CIRCLE_BRANCH//\//-}-${CIRCLE_SHA1}

          # Override settings for e2e testing
          cp .circleci/docker-compose.override.yml ./
          cat docker-compose.override.yml

          # Startup environment
          docker-compose up -d

          # Wait for container
          NEXT_WAIT_TIME=0
          until $( docker exec beagle curl http://localhost:8080 > /dev/null 2>&1 ) || [ $NEXT_WAIT_TIME -eq 20 ]; do
             sleep $(( NEXT_WAIT_TIME++ ))
          done

      # Prepare e2e tests
      - run: |
          docker create -v /repo --name source alpine:3.4 /bin/true
          docker cp . source:/repo

      # Run e2e tests
      - run: |
          docker run --network container:beagle --volumes-from source -w /repo keybird/beagle-e2e:0.1 .circleci/e2e.sh

      # Gather system logs
      - run:
          name: Gather system logs
          when: always
          command: |
            mkdir -p target/system-logs
            ps auxf > target/system-logs/ps
            free -m > target/system-logs/free
            docker-compose logs app > target/system-logs/beagle.log
            docker-compose logs elasticsearch > target/system-logs/elasticsearch.log
            docker-compose logs beagledb > target/system-logs/postgres.log
            docker stats --no-stream > target/system-logs/docker_stats

      # Copy test results back
      - run:
          command: |
            mkdir -p target/e2e
            docker cp source:/repo/target/screenshots target/e2e || exit 0
            docker cp source:/repo/target/surefire-reports target/surefire-reports || exit 0
          when: always

      # When e2e tests are running additional dependencies are downloaded, so we save them here
      - save_cache:
          paths:
            - ~/.m2
          key: beagle-repository-e2e-v2-{{ checksum "pom.xml" }}

      # Finally collect artifacts
      - store_test_results:
          path: target/surefire-reports
      - store_artifacts:
          path: target/e2e
      - store_artifacts:
          path: target/surefire-reports
      - store_artifacts:
          path: target/system-logs

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - e2e:
          requires:
            - build
